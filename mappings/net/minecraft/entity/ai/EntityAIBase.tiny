tiny	2	0	srg	named	comment
c	net/minecraft/entity/ai/EntityAIBase	net/minecraft/entity/ai/EntityAIBase	
	f	I	field_75254_a	mutexBits	#mutexBits, :, categoryBits, controls
		c	A bitmask telling which other tasks may not run concurrently. The test is a simple bitwise AND - if it yields zero, the two tasks may run concurrently, if not - they must run exclusively from each other.
	m	()Z	func_75250_a	shouldExecute	#shouldExecute, :, canStart, :
		c	Returns whether the EntityAIBase should begin execution.
	m	(I)V	func_75248_a	setMutexBits	#setMutexBits, :, setCategoryBits, setControls
		c	Sets a bitmask telling which other tasks may not run concurrently. The test is a simple bitwise AND - if it yields zero, the two tasks may run concurrently, if not - they must run exclusively from each other.
		p	1	p_75248_1_	mutexBitsIn	#mutexBitsIn, :, newBits, controls
	m	()Z	func_75253_b	continueExecuting	#continueExecuting, shouldContinueExecuting, shouldContinue, :
		c	Returns whether an in-progress EntityAIBase should continue executing
	m	()V	func_75249_e	startExecuting	#startExecuting, :, start, :
		c	Execute a one shot task or start executing a continuous task
	m	()V	func_75251_c	resetTask	#resetTask, :, stop, :
		c	Resets the task
	m	()V	func_75246_d	updateTask	#updateTask, :, tick, :
		c	Updates the task
	m	()Z	func_75252_g	isInterruptible	#isInterruptible, :, canStop, :
		c	Determine if this AI Task is interruptible by a higher (= lower value) priority task.
	m	()I	func_75247_h	getMutexBits	#getMutexBits, :, getCategoryBits, getControls
		c	Get a bitmask telling which other tasks may not run concurrently. The test is a simple bitwise AND - if it yields zero, the two tasks may run concurrently, if not - they must run exclusively from each other.
	m	()V	<init>	<init>	#~, ~, ~, ~
